
유효성 검사

	Spring MVC 로 처리함
	Spring MVD 는 JSR-303 규격의 유효성 검사 library 를 사용함
	Bean 에 data 가 입력될 때 어떤 검사를 할 것인지
	Annotation 으로 지정함
		ㄴ 이 Annotation 의 조건에 맞지 않으면 개발자에게 입력값에 오류가 있다는 정보를 전달함
														
			pom.xml 에 dependency 추가하기	
			
			maven repository 에서 Bean Vaildation API 검색	
			
			<!-- https://mvnrepository.com/artifact/javax.validation/validation-api -->
			<dependency>
			    <groupId>javax.validation</groupId>
			    <artifactId>validation-api</artifactId>
			    <version>2.0.1.Final</version>
			</dependency>
								
								
			maven repository 에서 Hibernate Validator Engine 검색
				
			<!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
			<dependency>
			    <groupId>org.hibernate.validator</groupId>
			    <artifactId>hibernate-validator</artifactId>
			    <version>6.1.2.Final</version>
			</dependency>
			
			Bean 에 Annotation 설정하기
			
			@Size(min=2, max=10)
			private String str1;
			
			@Max(100)
			private int data2;
			
			
			@Valid
			Controller 의 메소드에서 주입받는 Bean 에 
			@Valid 어노테이션을 설정하면 유효성검사를 실행함
			
			유효성 검사 결과를 사용하려면 
			BindingResult 객체를 주입받아야 함
				ㄴ 유효성 검사를 실행한 결과 정보를 저장하고 있음 
				
			위의 과정을 통해서 Controller 에서
			사용자가 입력한 값이 유효한지 파악함	
			
			Form 에 입력한 data 가 유지되게 하기
			유효성 검사를 통과하지 못해서 다시 입력화면으로 돌아온 경우
			기존에 입력해 놨던 내용을 유지하기 
				ㄴ 입력 화면에 전달된 Bean 객체를 input 태그에 값으로 주입해 준다.
				   Spring MVC 의 Form Custom Tag 를 사용함
				   이 경우는 검증에 실패한 문자열을 비교적 쉽게 setting 할 수 있음 
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
												
															
	